// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: type.proto

package ttp

/*
///////////////////////////////////////////////////
Package Name
///////////////////////////////////////////////////
*/

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/gogo/protobuf/gogoproto"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion2 // please upgrade the proto package

type Type int32

const (
	// Not a legal value for DataType.  Used to indicate a DataType field
	// has not been set.
	Type_INVALID Type = 0
	// Data types that all computation devices are expected to be
	// capable to support.
	Type_FLOAT      Type = 1
	Type_DOUBLE     Type = 2
	Type_INT32      Type = 3
	Type_UINT8      Type = 4
	Type_INT16      Type = 5
	Type_INT8       Type = 6
	Type_STRING     Type = 7
	Type_COMPLEX64  Type = 8
	Type_INT64      Type = 9
	Type_BOOL       Type = 10
	Type_QINT8      Type = 11
	Type_QUINT8     Type = 12
	Type_QINT32     Type = 13
	Type_BFLOAT16   Type = 14
	Type_QINT16     Type = 15
	Type_QUINT16    Type = 16
	Type_UINT16     Type = 17
	Type_COMPLEX128 Type = 18
	Type_HALF       Type = 19
	Type_UINT32     Type = 22
	Type_UINT64     Type = 23
)

var Type_name = map[int32]string{
	0:  "INVALID",
	1:  "FLOAT",
	2:  "DOUBLE",
	3:  "INT32",
	4:  "UINT8",
	5:  "INT16",
	6:  "INT8",
	7:  "STRING",
	8:  "COMPLEX64",
	9:  "INT64",
	10: "BOOL",
	11: "QINT8",
	12: "QUINT8",
	13: "QINT32",
	14: "BFLOAT16",
	15: "QINT16",
	16: "QUINT16",
	17: "UINT16",
	18: "COMPLEX128",
	19: "HALF",
	22: "UINT32",
	23: "UINT64",
}
var Type_value = map[string]int32{
	"INVALID":    0,
	"FLOAT":      1,
	"DOUBLE":     2,
	"INT32":      3,
	"UINT8":      4,
	"INT16":      5,
	"INT8":       6,
	"STRING":     7,
	"COMPLEX64":  8,
	"INT64":      9,
	"BOOL":       10,
	"QINT8":      11,
	"QUINT8":     12,
	"QINT32":     13,
	"BFLOAT16":   14,
	"QINT16":     15,
	"QUINT16":    16,
	"UINT16":     17,
	"COMPLEX128": 18,
	"HALF":       19,
	"UINT32":     22,
	"UINT64":     23,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}
func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_type_86743f1f85f5c56d, []int{0}
}

func init() {
	proto.RegisterEnum("ttp.Type", Type_name, Type_value)
}

func init() { proto.RegisterFile("type.proto", fileDescriptor_type_86743f1f85f5c56d) }

var fileDescriptor_type_86743f1f85f5c56d = []byte{
	// 303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x34, 0x90, 0xbd, 0x4e, 0xc3, 0x30,
	0x14, 0x85, 0xeb, 0x36, 0x4d, 0x93, 0xdb, 0x1f, 0x2e, 0x46, 0x02, 0x89, 0xc1, 0x03, 0x23, 0x42,
	0x54, 0xf9, 0x91, 0xd5, 0x35, 0xa1, 0x2d, 0x44, 0x32, 0x09, 0x85, 0x14, 0x31, 0x57, 0x2a, 0x1d,
	0x13, 0xa1, 0x30, 0x74, 0xe3, 0x05, 0x90, 0x78, 0x0c, 0x1e, 0x81, 0x47, 0x60, 0x64, 0x64, 0x6c,
	0xcc, 0x0b, 0x30, 0x32, 0x22, 0x3b, 0xc9, 0x76, 0xee, 0x77, 0xcf, 0xf1, 0xb9, 0x32, 0x40, 0xb1,
	0xcd, 0xd7, 0xe7, 0xf9, 0x53, 0x56, 0x64, 0xb4, 0x53, 0x14, 0xf9, 0xf1, 0xc9, 0x26, 0xdb, 0x64,
	0x63, 0x0d, 0x56, 0xcf, 0x8f, 0x63, 0x35, 0xe9, 0x41, 0xab, 0xca, 0x78, 0xfa, 0xda, 0x06, 0x23,
	0xdd, 0xe6, 0x6b, 0xda, 0x87, 0x5e, 0x14, 0xdf, 0x07, 0x22, 0x9a, 0x62, 0x8b, 0xda, 0xd0, 0x9d,
	0x8b, 0x24, 0x48, 0x91, 0x50, 0x00, 0x73, 0x9a, 0x2c, 0x43, 0x31, 0xc3, 0xb6, 0xc2, 0x51, 0x9c,
	0x7a, 0x2e, 0x76, 0x94, 0x5c, 0x46, 0x71, 0x3a, 0x41, 0xa3, 0xa6, 0x0e, 0xc7, 0x2e, 0xb5, 0xc0,
	0xd0, 0xd0, 0x54, 0xb1, 0xbb, 0xf4, 0x36, 0x8a, 0x2f, 0xb1, 0x47, 0x87, 0x60, 0x5f, 0x24, 0xd7,
	0x37, 0x62, 0xf6, 0xc0, 0x7d, 0xb4, 0x6a, 0x3f, 0xf7, 0xd1, 0x56, 0xfe, 0x30, 0x49, 0x04, 0x82,
	0x82, 0x0b, 0x1d, 0xed, 0xab, 0xe8, 0xa2, 0x7a, 0x7b, 0xa0, 0x75, 0x55, 0x39, 0xa4, 0x03, 0xb0,
	0x42, 0x7d, 0x95, 0xc3, 0x71, 0xd4, 0x6c, 0x1c, 0x8e, 0x7b, 0xea, 0x76, 0x9d, 0x70, 0x38, 0xa2,
	0x5a, 0xd4, 0x7a, 0x9f, 0x8e, 0x00, 0xea, 0x66, 0xc7, 0x9d, 0x20, 0x55, 0x7d, 0x57, 0x81, 0x98,
	0xe3, 0x41, 0xe3, 0xf2, 0x5c, 0x3c, 0x6c, 0x34, 0xf7, 0xf1, 0x28, 0x3c, 0xfb, 0x2e, 0x59, 0x6b,
	0x57, 0x32, 0xf2, 0x5b, 0x32, 0xf2, 0x57, 0x32, 0xf2, 0x22, 0x19, 0x79, 0x97, 0x8c, 0x7c, 0x48,
	0x46, 0x3e, 0x25, 0x23, 0x5f, 0x92, 0x91, 0x9d, 0x64, 0xe4, 0xed, 0x87, 0xb5, 0x56, 0xa6, 0xfe,
	0x44, 0xef, 0x3f, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x68, 0x2b, 0x1a, 0x7b, 0x01, 0x00, 0x00,
}
